#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

#define MAX_LEN 100

int main() 
{
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */    
    char ch;
    char str[MAX_LEN];
    char sentence[25];
    scanf("%c",&ch);
    scanf("%s",str);
    scanf(" %[^\n]s",sentence);
    printf("%c\n",ch);    
    printf("%s\n",str);    
    printf("%s\n",sentence);
    return 0;
}

//************************************
//Test Case - 1
//C
//Language
//Welcome To C!!
//************************************

/*
For the above test case the input stream looks like: C/nLanguage/nWelcome To C/n
If Line 16 is scanf("%[^\n]s",sentence);
Then Line 16 will not take Welcome to C instead take /n which is not intended.

Solution to above problem : 
Adding a space like : scanf(" %[^\n]s",sentence);
The first space will remove any standard whitespace characters namely tabs(\t),spaces(''),newline(\n),vertical tab(\v),feed(\f),return(/r).

Now a question arises why can't a space be inclucded in line 15 since there is chance of getting a newline after line 14.
Solution : 
The space is not needed in line 15 like line 16. Because scanf("%s",str); will get the charcaters between any number of whitespaces and
another whitespace in this case.
*/
